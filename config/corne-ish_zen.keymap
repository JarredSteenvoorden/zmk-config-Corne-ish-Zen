/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COMBO_TIMEOUT <30>

#define BASE    0
#define LNAV    1
#define NAV     2
#define SYM     3
#define FUNC    4
#define DISABLE 5

#define _______ &trans
#define XXXXXXX &none

&mt {
    tapping-term-ms = <150>;
    flavor = "hold-preferred";
};

&sk {
    release-after-ms = <1000>;
};

&sl {
    release-after-ms = <1000>;
};

/ {

behaviors {
    // Sticky key on tap, keypress on hold
    st: sticky_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "STICKY_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <250>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&sk>;
    };

    combos {
        compatible = "zmk,combos";

        combo_disable { timeout-ms = COMBO_TIMEOUT; key-positions = <0 9>; bindings = <&tog DISABLE>; };

        // Escape, Tab, Enter, Backspace, Del
        combo_esc   { timeout-ms = COMBO_TIMEOUT; key-positions = <1 2>;   bindings = <&kp ESC>; };
        combo_tab   { timeout-ms = COMBO_TIMEOUT; key-positions = <11 12>; bindings = <&kp TAB>; };
        combo_bspc  { timeout-ms = COMBO_TIMEOUT; key-positions = <7 8>;   bindings = <&kp BKSP>; };
        combo_del   { timeout-ms = COMBO_TIMEOUT; key-positions = <8 9>;   bindings = <&kp DEL>; };
        combo_enter { timeout-ms = COMBO_TIMEOUT; key-positions = <17 18>; bindings = <&kp ENTER>; };

        // Sticky tap CTRL, ALT, GUI
        combo_lgui  { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <1 3>;           bindings = <&st LGUI LGUI>; };
        combo_lctrl { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <11 13>;         bindings = <&st LCTRL LCTRL>; };
        combo_lalt  { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <21 23>;         bindings = <&st LALT LALT>; };

        combo_ralt  { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <6 8>;           bindings = <&st RALT RALT>; };
        combo_rctrl { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <16 18>;         bindings = <&st RCTRL RCTRL>; };
        combo_rgui  { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <26 28>;         bindings = <&st RGUI RGUI>; };

        // Cut, Copy, Paste
        combo_cut   { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <21 22 23>;      bindings = <&kp LC(X)>; };
        combo_copy  { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <21 22>;         bindings = <&kp LC(C)>; };
        combo_paste { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <22 23>;         bindings = <&kp LC(V)>; };

        // Left hand nav toggle, function layer
        combo_lnav  { timeout-ms = COMBO_TIMEOUT; layers = <BASE LNAV>; key-positions = <11 2 13>;  bindings = <&tog LNAV>; };
        combo_func  { timeout-ms = COMBO_TIMEOUT; layers = <BASE>; key-positions = <12 13>;         bindings = <&sl FUNC>; };
    };
};

keymap {
compatible = "zmk,keymap";

    default_layer {
        label = "QWERTY";
        bindings = <
           XXXXXXX         &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P           XXXXXXX
           XXXXXXX         &lt NAV A       &kp S           &kp D           &kp F           &kp G           &kp H           &kp J           &kp K           &kp L           &kp APOS        XXXXXXX
           XXXXXXX         &mt LSHFT Z     &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &mt RSHFT FSLH  XXXXXXX
                                                           &kp ENTER       &lt SYM SPC     &lt SYM SPC     &lt SYM SPC     &lt SYM SPC     &kp ENTER
        >;
    };

    lnav_layer {
        label = "QWERTY";
        bindings = <
            _______         _______         &kp HOME        &kp UP          &kp END         &kp PG_UP       _______         _______         _______         _______         _______         _______
            _______         _______         &kp LEFT        &kp DOWN        &kp RIGHT       &kp PG_DN       _______         _______         _______         _______         _______         _______
            _______         _______         _______         _______         _______         _______         _______         _______         _______         _______         _______         _______
            _______         _______         _______         _______         _______         _______
        >;
    };

    nav_layer {
        label = "QWERTY";
        bindings = <
            _______         &bt BT_CLR      _______         &kp LGUI        &kp DEL         &kp BSPC        &kp PG_UP       &kp HOME        &kp UP          &kp END         &kp BKSP        _______
            _______         _______         &kp LALT        &kp LSHFT       &kp LCTRL       &kp ENTER       &kp PG_DN       &kp LEFT        &kp DOWN        &kp RIGHT       &kp DEL         _______
            _______         &bt BT_SEL 0    &bt BT_SEL 1    _______         _______         _______         _______         _______         _______         &kp INS         _______         _______
            _______         &kp TAB         &kp TAB         &kp TAB         &kp TAB         _______
        >;
    };

    sym_layer {
        label = "QWERTY";
        bindings = <
            _______         &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          _______
            _______         _______         _______         _______         _______         _______         &kp SEMI        &kp MINUS       &kp EQUAL       &kp LBKT        &kp RBKT        _______
            _______         &kp LSHFT       _______         _______         _______         _______         _______         &kp BSLH        &kp GRAVE       &kp DOT         &kp RSHFT       _______
            &bootloader     _______         _______         _______         _______         &reset
        >;
    };

    func_layer {
        label = "QWERTY";
        bindings = <
            _______         _______         &kp F7          &kp F8          &kp F9          &kp F10         &kp F10         &kp F7          &kp F8          &kp F9          _______         _______
            _______         _______         &kp F4          &kp F5          &kp F6          &kp F11         &kp F11         &kp F4          &kp F5          &kp F6          _______         _______
            _______         _______         &kp F1          &kp F2          &kp F3          &kp F12         &kp F12         &kp F1          &kp F2          &kp F3          _______         _______
            _______         _______         _______         _______         _______         _______
        >;
    };

    disable_layer {
        label = "QWERTY";
        bindings = <
            XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX
            XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX
            XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX
            XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX         XXXXXXX
        >;
    };
};

};
